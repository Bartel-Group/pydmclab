LOBSTER v4.1.0 (g++ 7.5.0)
Copyright (C) 2021 by Chair of Solid-State and Quantum Chemistry, RWTH Aachen.
All rights reserved. Contributions by S. Maintz, V. L. Deringer, M. Esser, R. Nelson, C. Ertural, P. C. Mueller, A. L. Tchougreeff and R. Dronskowski
starting on host cn0158 on 2022-12-09 at 17:02:10 CST using 16 threads
detecting used PAW program... VASP
initializing PW system...
initializing Augmentations...
recommended basis functions:
Mn 3d 3p 4s 
O 2p 2s 
initializing LCAO system...
setting up local basis functions...
 O (pbeVaspFit2015) 2s 2p_y 2p_z 2p_x 
Mn (pbeVaspFit2015) 4s 3p_y 3p_z 3p_x 3d_xy 3d_yz 3d_z^2 3d_xz 3d_x^2-y^2 
setting up CO interactions... found 1216 interactions.
projecting...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

WARNING: Cannot use the tetrahedron method for k-space integration and must fall
WARNING: back to Gaussian smearing which can take significantly longer. Make
WARNING: sure to use the tetrahedron method whenever applicable.

calculating overlaps...
post-processing projection...
saving projection to projectionData.lobster...
abs. total  spilling:   8.89%
abs. charge spilling:   0.50%

calculating pDOS... using Gaussian smearing integration (sigma=0.01eV)
writing DOSCAR.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing COOPCAR.lobster and ICOOPLIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

calculating pCOHPs... using Gaussian smearing integration (sigma=0.01eV)
writing COHPCAR.lobster and ICOHPLIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing COBICAR.lobster and ICOBILIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing CHARGE.lobster and GROSSPOP.lobster...
calculating Madelung energies...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing SitePotentials.lobster and MadelungEnergies.lobster...
finished in 0 h  9 min 29 s 261 ms of wall time
            1 h 45 min 12 s 630 ms of user time
            0 h  0 min 18 s 410 ms of sys  time
Atoms in file1: 12, Atoms in file2: 12
Points in file1: 403200, Points in file2: 403200

  GRID BASED BADER ANALYSIS  (Version 1.04 02/08/20)

  OPEN ... CHGCAR              
  VASP5-STYLE INPUT FILE
  DENSITY-GRID:   40 x  72 x 140
  CLOSE ... CHGCAR              
  RUN TIME:    0.12 SECONDS

  OPEN ... CHGCAR_sum          
  VASP5-STYLE INPUT FILE
  DENSITY-GRID:   40 x  72 x 140
  CLOSE ... CHGCAR_sum          
  RUN TIME:    0.13 SECONDS

  CALCULATING BADER CHARGE DISTRIBUTION
                 0  10  25  50  75  100
  PERCENT DONE:  ********************** 

  REFINING AUTOMATICALLY
  ITERATION: 1
  EDGE POINTS:        104932
  REASSIGNED POINTS:    5125

  RUN TIME:       0.79 SECONDS

  CALCULATING MINIMUM DISTANCES TO ATOMS
                 0  10  25  50  75  100
  PERCENT DONE:  **********************
  RUN TIME:    0.19 SECONDS

  WRITING BADER ATOMIC CHARGES TO ACF.dat
  WRITING BADER VOLUME CHARGES TO BCF.dat

  NUMBER OF BADER MAXIMA FOUND:             12
      SIGNIFICANT MAXIMA FOUND:             12
                 VACUUM CHARGE:         0.0000
           NUMBER OF ELECTRONS:      100.00000
 
